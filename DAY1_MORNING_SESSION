# Getting Started with Python
# 1. Introduction to Python and its History
# Python is a high-level, interpreted programming language known for its readability and simplicity. Created by Guido van Rossum and first released in 1991, Python emphasizes code readability with its significant use of whitespace. It supports multiple programming paradigms, including procedural, object-oriented, and functional programming.

# Key Features:


# Easy to Read and Write: Python's syntax is clear and concise.
# Versatile: Suitable for web development, data analysis, artificial intelligence, scientific computing, and more.
# Extensive Libraries: A rich set of libraries and frameworks like Django, Flask, Pandas, NumPy, and more.
# 2. Installing Python and Setting Up the Environment
# To start using Python, you need to install it on your system.

# Steps to Install Python:

# Download Python:

# Go to the official Python website: python.org.
# Download the latest version for your operating system.
# Install Python:

# Run the downloaded installer.
# Ensure you check the box that says "Add Python to PATH" during installation.
# Follow the installation prompts.
# Verify Installation:

# Open a command prompt or terminal.
# Type python --version to verify the installation. You should see the Python version number.
# python --version
# 3. Using Python IDEs
# An Integrated Development Environment (IDE) can make coding in Python more efficient by providing features like syntax highlighting, code completion, and debugging tools. Here are some popular Python IDEs:

# a. PyCharm:

# Installation: Download from the JetBrains website.
# Features: Advanced code editor, integrated debugger, and support for web development frameworks.
# b. Visual Studio Code (VS Code):

# Installation: Download from the Visual Studio Code website.
# Features: Lightweight, supports extensions, integrated terminal, and debugging tools.
# c. Jupyter Notebook:

# Installation: Install via Anaconda or directly using pip (pip install notebook).
# Features: Interactive coding environment, ideal for data analysis and visualization.
# d. Anaconda:

# Installation: Download from the Anaconda website.
# Features: Comes with a suite of tools including Jupyter Notebook, Spyder, and many pre-installed libraries for data science.
# Example Code
# To get you started, here's a simple Python script that prints "Hello, World!" and demonstrates basic variable assignment and a loop.

# Hello, World! Script:

# Open your IDE (e.g., VS Code, PyCharm).
# Create a new Python file (hello.py).
# hello.py

# Print statement
print("Hello, World!")

# Variable assignment
count = 5

# Loop to print numbers
for i in range(count):
    print(f"Number: {i}")
# Run the script:
# In the terminal or command prompt, navigate to the directory containing hello.py.
# Execute the script with the command
# python hello.pY
# Summary
# Python History: Created by Guido van Rossum, first released in 1991.
# Installing Python: Download from the official site, run the installer, and verify the installation.
# Using IDEs: PyCharm, VS Code, Jupyter Notebook, and Anaconda are popular choices.
# Example Code: A basic script to print "Hello, World!" and demonstrate a loop.

